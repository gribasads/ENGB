/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ArthurCyrilloGeiger
 */
public class TelaInicial extends javax.swing.JFrame{

    Visualizar visualizar;
    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        telaInicial = new javax.swing.JLabel();
        saldoDisponivel = new javax.swing.JLabel();
        exibirSaldo = new javax.swing.JTextField();
        addDespesa = new javax.swing.JButton();
        addGanhos = new javax.swing.JButton();
        voltarTelaLogin = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaHistorico = new javax.swing.JTable();
        Visualizar = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        telaInicial.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        telaInicial.setText("Tela Inicial");

        saldoDisponivel.setText("Saldo Dispon√≠vel:");

        exibirSaldo.setEditable(false);
        exibirSaldo.setAutoscrolls(false);
        exibirSaldo.setRequestFocusEnabled(false);
        exibirSaldo.setVerifyInputWhenFocusTarget(false);
        exibirSaldo.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                exibirSaldoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        addDespesa.setText("+ DESPESAS");
        addDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDespesaActionPerformed(evt);
            }
        });

        addGanhos.setText("+ GANHOS");
        addGanhos.setToolTipText("");
        addGanhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGanhosActionPerformed(evt);
            }
        });

        voltarTelaLogin.setText("< Voltar para a tela de login");
        voltarTelaLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voltarTelaLoginMouseClicked(evt);
            }
        });

        tabelaHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "VALOR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaHistorico.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelaHistoricoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabelaHistorico);

        Visualizar.setText("Ver Detalhes");
        Visualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(telaInicial)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saldoDisponivel)
                        .addGap(5, 5, 5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addDespesa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addComponent(addGanhos))
                            .addComponent(exibirSaldo)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(voltarTelaLogin)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Visualizar)
                .addGap(103, 103, 103))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telaInicial)
                    .addComponent(voltarTelaLogin))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saldoDisponivel)
                    .addComponent(exibirSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addGanhos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Visualizar)
                .addContainerGap())
        );

        addDespesa.getAccessibleContext().setAccessibleName("+ Despesas");
        addGanhos.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDespesaActionPerformed
        // ir para a tela de adicionar despesa
        AdicionarDespesa addDespesa = new AdicionarDespesa();
        this.dispose();
        addDespesa.setVisible(true);
    }//GEN-LAST:event_addDespesaActionPerformed

    private void addGanhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGanhosActionPerformed
        // ir para a tela de adicionar ganho
        AdicionarGanho addGanho = new AdicionarGanho();
        this.dispose();
        addGanho.setVisible(true);

    }//GEN-LAST:event_addGanhosActionPerformed

    private void exibirSaldoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_exibirSaldoAncestorAdded
        float saldoAtual = 0;    
        try {                        
            // conectar no banco e buscar o saldo            
            Connection con = null;
            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://babar.db.elephantsql.com:5432/byilvclc", "byilvclc", "yXK3NfRASYu3lbByS86UJp5rB7ClzphY");
            System.out.println("CONECTADO!");            
            Statement stm = con.createStatement();
            String sql = "select balance from public.accounts a where iduser='1'";
            ResultSet rs = stm.executeQuery(sql);
            
            //armazenar o saldo e exibir
            while (rs.next()){                
                saldoAtual = rs.getFloat("balance");
                exibirSaldo.setText(Float. toString(saldoAtual));
                con.close();
            }
            }catch (Exception e) {
            e.printStackTrace();
            }
    }//GEN-LAST:event_exibirSaldoAncestorAdded

    private void voltarTelaLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voltarTelaLoginMouseClicked
        // voltar para a tela de login
        Login login = new Login();
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_voltarTelaLoginMouseClicked

    private void VisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisualizarActionPerformed
        //armazenar a linha selecionada
        int setar = tabelaHistorico.getSelectedRow();
        //armazenar a id da transa√ß√£o da linha selecionada
        String id = (String) tabelaHistorico.getModel().getValueAt(setar, 0);
        //abrir a tela de visualizar e enviar o id da transa√ß√£o selecionada
        visualizar = new Visualizar();        
        this.dispose();
        visualizar.setVisible(true);
        visualizar.receberId(Integer.parseInt(id));        
    }//GEN-LAST:event_VisualizarActionPerformed

    private void tabelaHistoricoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelaHistoricoAncestorAdded
            try {
            // conectar e buscar os IDs das transa√ß√µes e os valores de acordo com o usu√°rio 
            Connection con = null;
            Class.forName("org.postgresql.Driver");
            con = DriverManager.getConnection("jdbc:postgresql://babar.db.elephantsql.com:5432/byilvclc", "byilvclc", "yXK3NfRASYu3lbByS86UJp5rB7ClzphY");
            System.out.println("CONECTADO!");            
            Statement stm = con.createStatement();
            String sql = "select idtransaction, value from public.wallet a where iduser='1'";
            ResultSet rs = stm.executeQuery(sql);
            
            DefaultTableModel valores = (DefaultTableModel) tabelaHistorico.getModel();
            
            // exibir os IDs e valores na tabela
            while (rs.next()){                
                int idTransacao = rs.getInt("idtransaction");
                float valor = rs.getFloat("value");
                valores.addRow(new String[]{String.valueOf(idTransacao), String.valueOf(valor)});
                con.close();
            }
            }catch (Exception e) {
            e.printStackTrace();
            }
    }//GEN-LAST:event_tabelaHistoricoAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Visualizar;
    private javax.swing.JButton addDespesa;
    private javax.swing.JButton addGanhos;
    private javax.swing.JTextField exibirSaldo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel saldoDisponivel;
    private javax.swing.JTable tabelaHistorico;
    private javax.swing.JLabel telaInicial;
    private javax.swing.JLabel voltarTelaLogin;
    // End of variables declaration//GEN-END:variables

}
